"""global_db_change

Revision ID: a1885569f09d
Revises: d17157d6167d
Create Date: 2023-02-10 15:25:03.167352

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a1885569f09d'
down_revision = 'd17157d6167d'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('api_claims', sa.Column('claim_type_id', sa.Integer(), nullable=False))
    op.add_column('api_claims', sa.Column('claim_value', sa.String(length=30), nullable=True))
    op.create_foreign_key(None, 'api_claims', 'api_claim_types', ['claim_type_id'], ['id'], ondelete='CASCADE')
    op.drop_column('api_claims', 'type')
    op.add_column('api_scope_claims', sa.Column('scope_claim_type_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'api_scope_claims', 'api_scope_claim_types', ['scope_claim_type_id'], ['id'], ondelete='CASCADE')
    op.drop_column('api_scope_claims', 'type')
    op.alter_column('api_scopes', 'api_resources_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.add_column('api_secrets', sa.Column('secret_type_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'api_secrets', 'api_secrets_types', ['secret_type_id'], ['id'], ondelete='CASCADE')
    op.drop_column('api_secrets', 'type')
    op.add_column('clients', sa.Column('access_token_type_id', sa.Integer(), nullable=False))
    op.add_column('clients', sa.Column('protocol_type_id', sa.Integer(), nullable=False))
    op.add_column('clients', sa.Column('refresh_token_expiration_type_id', sa.Integer(), nullable=False))
    op.add_column('clients', sa.Column('refresh_token_usage_type_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'clients', 'protocol_types', ['protocol_type_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'clients', 'refresh_token_expiration_types', ['refresh_token_expiration_type_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'clients', 'access_token_types', ['access_token_type_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'clients', 'refresh_token_usage_types', ['refresh_token_usage_type_id'], ['id'], ondelete='CASCADE')
    op.drop_column('clients', 'refresh_token_expiration')
    op.drop_column('clients', 'refresh_token_usage')
    op.drop_column('clients', 'access_token_type')
    op.drop_column('clients', 'protocol_type')
    op.add_column('persistent_grants', sa.Column('grant_data', sa.String(), nullable=False))
    op.add_column('persistent_grants', sa.Column('user_id', sa.Integer(), nullable=False))
    op.add_column('persistent_grants', sa.Column('persistent_grant_type_id', sa.Integer(), nullable=False))
    op.alter_column('persistent_grants', 'client_id',
               existing_type=sa.VARCHAR(length=80),
               nullable=False)
    op.drop_constraint('persistent_grants_subject_id_fkey1', 'persistent_grants', type_='foreignkey')
    op.create_foreign_key(None, 'persistent_grants', 'persistent_grant_types', ['persistent_grant_type_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'persistent_grants', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('persistent_grants', 'subject_id')
    op.drop_column('persistent_grants', 'data')
    op.drop_column('persistent_grants', 'type')
    op.add_column('user_claims', sa.Column('user_id', sa.Integer(), nullable=False))
    op.add_column('user_claims', sa.Column('claim_type_id', sa.Integer(), nullable=False))
    op.drop_constraint('user_claims_User_fkey', 'user_claims', type_='foreignkey')
    op.create_foreign_key(None, 'user_claims', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'user_claims', 'user_claim_types', ['claim_type_id'], ['id'], ondelete='CASCADE')
    op.drop_column('user_claims', 'User')
    op.drop_column('user_claims', 'claim_type')
    op.add_column('user_logins', sa.Column('user_id', sa.Integer(), nullable=True))
    op.drop_constraint('user_logins_User_fkey', 'user_logins', type_='foreignkey')
    op.create_foreign_key(None, 'user_logins', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('user_logins', 'User')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_logins', sa.Column('User', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'user_logins', type_='foreignkey')
    op.create_foreign_key('user_logins_User_fkey', 'user_logins', 'users', ['User'], ['id'], ondelete='CASCADE')
    op.drop_column('user_logins', 'user_id')
    op.add_column('user_claims', sa.Column('claim_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('user_claims', sa.Column('User', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'user_claims', type_='foreignkey')
    op.drop_constraint(None, 'user_claims', type_='foreignkey')
    op.create_foreign_key('user_claims_User_fkey', 'user_claims', 'users', ['User'], ['id'], ondelete='CASCADE')
    op.drop_column('user_claims', 'claim_type_id')
    op.drop_column('user_claims', 'user_id')
    op.add_column('persistent_grants', sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('persistent_grants', sa.Column('data', sa.VARCHAR(length=2048), autoincrement=False, nullable=False))
    op.add_column('persistent_grants', sa.Column('subject_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'persistent_grants', type_='foreignkey')
    op.drop_constraint(None, 'persistent_grants', type_='foreignkey')
    op.create_foreign_key('persistent_grants_subject_id_fkey1', 'persistent_grants', 'users', ['subject_id'], ['id'], ondelete='CASCADE')
    op.alter_column('persistent_grants', 'client_id',
               existing_type=sa.VARCHAR(length=80),
               nullable=True)
    op.drop_column('persistent_grants', 'persistent_grant_type_id')
    op.drop_column('persistent_grants', 'user_id')
    op.drop_column('persistent_grants', 'grant_data')
    op.add_column('clients', sa.Column('protocol_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('clients', sa.Column('access_token_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('clients', sa.Column('refresh_token_usage', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('clients', sa.Column('refresh_token_expiration', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'clients', type_='foreignkey')
    op.drop_constraint(None, 'clients', type_='foreignkey')
    op.drop_constraint(None, 'clients', type_='foreignkey')
    op.drop_constraint(None, 'clients', type_='foreignkey')
    op.drop_column('clients', 'refresh_token_usage_type_id')
    op.drop_column('clients', 'refresh_token_expiration_type_id')
    op.drop_column('clients', 'protocol_type_id')
    op.drop_column('clients', 'access_token_type_id')
    op.add_column('api_secrets', sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'api_secrets', type_='foreignkey')
    op.drop_column('api_secrets', 'secret_type_id')
    op.alter_column('api_scopes', 'api_resources_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.add_column('api_scope_claims', sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'api_scope_claims', type_='foreignkey')
    op.drop_column('api_scope_claims', 'scope_claim_type_id')
    op.add_column('api_claims', sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'api_claims', type_='foreignkey')
    op.drop_column('api_claims', 'claim_value')
    op.drop_column('api_claims', 'claim_type_id')
    # ### end Alembic commands ###
