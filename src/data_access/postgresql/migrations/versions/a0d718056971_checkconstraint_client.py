"""checkconstraint client

Revision ID: a0d718056971
Revises: d17157d6167d
Create Date: 2023-02-07 17:32:34.133571

"""
from alembic import op
import sqlalchemy as sa
from src.data_access.postgresql.tables.client import ACCESS_TOKEN_TYPES, PROTOCOL_TYPES, REFRESH_TOKEN_EXPIRATION, REFRESH_TOKEN_USAGE

def from_list_of_str_to_str(values):
    result = ""
    for value in values:
        result += "\'"+value+"\', "
    return result[:-2]

# revision identifiers, used by Alembic.
revision = 'a0d718056971'
down_revision = 'd17157d6167d'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_check_constraint(
        "protocol_type_in_list",
        "clients",
        f'"protocol_type" IN ({from_list_of_str_to_str(PROTOCOL_TYPES)})'
    )
    op.create_check_constraint(
        "refresh_token_expiration_in_list",
        "clients",
        f'"refresh_token_expiration" IN ({from_list_of_str_to_str(REFRESH_TOKEN_EXPIRATION)})'
    )
    op.create_check_constraint(
        "refresh_token_usage_in_list",
        "clients",
        f'"protocol_type" IN ({from_list_of_str_to_str(REFRESH_TOKEN_USAGE)})'
    )
    op.create_check_constraint(
        "access_token_type_in_list",
        "clients",
        f'"access_token_type" IN ({from_list_of_str_to_str(ACCESS_TOKEN_TYPES)})'
    )
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("protocol_type_in_list", "clients", type_="check")
    op.drop_constraint("refresh_token_expiration_in_list", "clients", type_="check")
    op.drop_constraint("refresh_token_usage_in_list", "clients", type_="check")
    op.drop_constraint("access_token_type_in_list", "clients", type_="check")
    # ### end Alembic commands ###
