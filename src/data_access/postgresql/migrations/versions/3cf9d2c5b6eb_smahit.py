"""smahit

Revision ID: 3cf9d2c5b6eb
Revises: 1d650ea96c78
Create Date: 2023-02-08 18:49:14.741000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3cf9d2c5b6eb'
down_revision = '1d650ea96c78'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('refresh_token_usage_types')
    op.drop_table('protocol_types')
    op.drop_table('refresh_token_types')
    op.drop_table('user_claim_types')
    op.add_column('clients', sa.Column('access_token_type', sa.String(), nullable=True))
    op.drop_constraint('clients_refresh_token_usage_id_fkey', 'clients', type_='foreignkey')
    op.drop_constraint('clients_refresh_token_expiration_id_fkey', 'clients', type_='foreignkey')
    op.drop_constraint('clients_access_token_type_id_fkey', 'clients', type_='foreignkey')
    op.drop_constraint('clients_protocol_type_id_fkey', 'clients', type_='foreignkey')
    op.drop_column('clients', 'refresh_token_usage_id')
    op.drop_column('clients', 'refresh_token_expiration_id')
    op.drop_column('clients', 'protocol_type_id')
    op.drop_column('clients', 'access_token_type_id')
    op.add_column('user_claims', sa.Column('claim_type', sa.String(), nullable=True))
    op.drop_constraint('user_claims_claim_type_id_fkey', 'user_claims', type_='foreignkey')
    op.drop_column('user_claims', 'claim_type_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_claims', sa.Column('claim_type_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('user_claims_claim_type_id_fkey', 'user_claims', 'user_claim_types', ['claim_type_id'], ['id'], ondelete='CASCADE')
    op.drop_column('user_claims', 'claim_type')
    op.add_column('clients', sa.Column('access_token_type_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('clients', sa.Column('protocol_type_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('clients', sa.Column('refresh_token_expiration_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('clients', sa.Column('refresh_token_usage_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('clients_protocol_type_id_fkey', 'clients', 'protocol_types', ['protocol_type_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('clients_access_token_type_id_fkey', 'clients', 'access_token_types', ['access_token_type_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('clients_refresh_token_expiration_id_fkey', 'clients', 'refresh_token_types', ['refresh_token_expiration_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('clients_refresh_token_usage_id_fkey', 'clients', 'refresh_token_usage_types', ['refresh_token_usage_id'], ['id'], ondelete='CASCADE')
    op.drop_column('clients', 'access_token_type')
    op.create_table('user_claim_types',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_claim_types_pkey'),
    sa.UniqueConstraint('type', name='user_claim_types_type_key')
    )
    op.create_table('refresh_token_types',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='refresh_token_types_pkey'),
    sa.UniqueConstraint('type', name='refresh_token_types_type_key')
    )
    op.create_table('protocol_types',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='protocol_types_pkey'),
    sa.UniqueConstraint('type', name='protocol_types_type_key')
    )
    op.create_table('refresh_token_usage_types',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='refresh_token_usage_types_pkey'),
    sa.UniqueConstraint('type', name='refresh_token_usage_types_type_key')
    )
    # ### end Alembic commands ###
